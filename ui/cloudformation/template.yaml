AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template for Led Monitor V2 UI"
Transform: "AWS::Serverless-2016-10-31"
Parameters:
  SSLCertArn:
    Description: "ACM Cert arn for *.example.jp"
    Type: "String"
  Hostname:
    Description: "Hostname in DNS for ui"
    Type: "String"
  BucketName:
    Description: "UI Bucket Asset"
    Type: "String"
  HostedZoneId:
    Type: "String"
  TargetHostedZoneId:
    Type: "String"
    Default: Z2FDTNDATAQYW2

Resources:

  UIBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref "BucketName"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: "index.html"
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  UIBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref UIBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource: !Sub arn:aws:s3:::${UIBucket}/*

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: !Sub "UI ${Hostname}"
        PriceClass: "PriceClass_200"
        HttpVersion: "http2"
        Enabled: true
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
            Cookies: {Forward: "none"}
            Headers: ["Origin"]
          ResponseHeadersPolicyId: !Ref LEDMonitorHeadersPolicy
          TargetOriginId: !Join ["", ["Custom-", !Ref "UIBucket", ".s3-website-", !Ref "AWS::Region", ".amazonaws.com/"]]
          ViewerProtocolPolicy: "redirect-to-https"
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: "/index.html"
            ResponseCode: 200
            ErrorCachingMinTTL: 0
          - ErrorCode: 404
            ResponsePagePath: "/index.html"
            ResponseCode: 200
            ErrorCachingMinTTL: 0
        ViewerCertificate:
          AcmCertificateArn: !Ref "SSLCertArn"
          SslSupportMethod: "sni-only"
        Aliases:
        - !Ref Hostname
        DefaultRootObject: "index.html"
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
            DomainName: !Join ["", [!Ref "UIBucket", ".s3-website-", !Ref "AWS::Region", ".amazonaws.com"]]
            Id: !Join ["", ["Custom-", !Ref "UIBucket", ".s3-website-", !Ref "AWS::Region", ".amazonaws.com/"]]

  LEDMonitorHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub ${AWS::StackName}-led-monitor-v2-response-header-policy
        Comment: LED Monitor V2 response header policy.
        CorsConfig:
          OriginOverride: false
          AccessControlAllowCredentials: false
          AccessControlAllowHeaders:
            Items:
              - ALL
          AccessControlAllowMethods:
            Items:
              - POST
              - GET
              - OPTIONS
              - DELETE
          AccessControlAllowOrigins:
            Items:
            - !Ref Hostname
          AccessControlExposeHeaders:
            Items:
            - ALL
          AccessControlMaxAgeSec: 3600
        RemoveHeadersConfig:
          Items:
            - Header: server
        ServerTimingHeadersConfig:
          Enabled: true
          SamplingRate: 50
        SecurityHeadersConfig:
          StrictTransportSecurity:
            AccessControlMaxAgeSec: 31536000
            Override: true
          ContentTypeOptions:
            Override: true
          FrameOptions:
            FrameOption: SAMEORIGIN
            Override: true
          ReferrerPolicy:
            Override: true
            ReferrerPolicy: strict-origin-when-cross-origin
          XSSProtection:
            Override: true
            Protection: true
          ContentSecurityPolicy:
            ContentSecurityPolicy: !Sub "img-src 'self'; script-src ${Hostname} 'sha256-UR0iHsZVfsKqSr7yAVEyYw7qoSY2X0JnEIXNLstrEwk='; style-src 'self' 'sha256-47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU='; object-src 'self';"
            Override: true

  ARecordZoneApex:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub ${Hostname}.
      Type: A
      AliasTarget:
        HostedZoneId: !Ref TargetHostedZoneId
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        EvaluateTargetHealth: false

Outputs:
  ScorerWebBucketName:
    Value: !Ref "UIBucket"
    Export:
      Name: !Sub "${AWS::StackName}-UIBucketName"
  CloudFrontDistributionID:
    Value: !Ref "CloudFrontDistribution"
    Export:
      Name: !Sub "${AWS::StackName}-DistributionID"
