name: Deploy Portfolio

on:
  push:
    branches:
      - dev
      - master
  workflow_dispatch:

jobs:
  # --------------------
  # Development Environment
  # --------------------
  deploy-api-dev:
    name: Deploy API - Dev
    runs-on: ubuntu-latest
    environment: dev
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.API_AWS_REGION }}

      - name: Deploy API Stack
        working-directory: api/cloudformation/
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
        env:
          ENV: dev
          REGION: ${{ vars.API_AWS_REGION }}
          STACK_NAME: ${{ vars.API_STACK_NAME_DEV }}
          CODE_BUCKET: ${{ vars.API_BUCKET_NAME_DEV }}
          DEFAULT_PYTHON_RUNTIME: python3.12
          AWS_PROFILE: ""
          AWS_PROFILE_OPTION: ""

  deploy-ui-dev:
    name: Deploy UI - Dev
    runs-on: ubuntu-latest
    environment: dev
    needs: deploy-api-dev
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.UI_AWS_REGION }}

      - name: Create environment file
        working-directory: frontend/cloudformation/environment/
        run: |
          cat > dev.sh << EOF
          #!/bin/bash
          export ENV=dev
          export REGION=${{ vars.UI_AWS_REGION }}
          export HOSTNAME=${{ vars.UI_HOSTNAME_DEV }}
          export UI_BUCKET_NAME=${{ vars.UI_BUCKET_NAME_DEV }}
          export ACM_CERTIFICATE_ARN=${{ vars.ACM_CERTIFICATE_ARN }}
          export REACT_APP_API_BASE_URL=${{ vars.REACT_APP_API_BASE_URL_DEV }}
          export REACT_APP_COGNITO_USER_POOL_ID=${{ vars.REACT_APP_COGNITO_USER_POOL_ID_DEV }}
          export REACT_APP_COGNITO_CLIENT_ID=${{ vars.REACT_APP_COGNITO_CLIENT_ID_DEV }}
          export REACT_APP_COGNITO_REGION=${{ vars.REACT_APP_COGNITO_REGION }}
          export REACT_APP_COGNITO_DOMAIN=${{ vars.REACT_APP_COGNITO_DOMAIN_DEV }}
          export REACT_APP_COGNITO_REDIRECT_SIGNIN=${{ vars.REACT_APP_COGNITO_REDIRECT_SIGNIN_DEV }}
          export REACT_APP_COGNITO_REDIRECT_SIGNOUT=${{ vars.REACT_APP_COGNITO_REDIRECT_SIGNOUT_DEV }}
          export REACT_APP_API_KEY=${{ vars.REACT_APP_API_KEY_DEV }}
          EOF
          chmod +x dev.sh

      - name: Deploy UI Stack
        working-directory: frontend/cloudformation/
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
        env:
          ENV: dev

  # --------------------
  # Production Environment
  # --------------------
  deploy-api-prod:
    name: Deploy API - Prod
    runs-on: ubuntu-latest
    environment: prod
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.API_AWS_REGION }}

      - name: Deploy API Stack
        working-directory: api/cloudformation/
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
        env:
          ENV: prod
          REGION: ${{ vars.API_AWS_REGION }}
          STACK_NAME: ${{ vars.API_STACK_NAME_PROD }}
          CODE_BUCKET: ${{ vars.API_BUCKET_NAME_PROD }}
          DEFAULT_PYTHON_RUNTIME: python3.12
          AWS_PROFILE: ""
          AWS_PROFILE_OPTION: ""

  deploy-ui-prod:
    name: Deploy UI - Prod
    runs-on: ubuntu-latest
    environment: prod
    needs: deploy-api-prod
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.UI_AWS_REGION }}

      - name: Create environment file
        working-directory: frontend/cloudformation/environment/
        run: |
          cat > prod.sh << EOF
          #!/bin/bash
          export ENV=prod
          export REGION=${{ vars.UI_AWS_REGION }}
          export HOSTNAME=${{ vars.UI_HOSTNAME_PROD }}
          export UI_BUCKET_NAME=${{ vars.UI_BUCKET_NAME_PROD }}
          export ACM_CERTIFICATE_ARN=${{ vars.ACM_CERTIFICATE_ARN }}
          export REACT_APP_API_BASE_URL=${{ vars.REACT_APP_API_BASE_URL_PROD }}
          export REACT_APP_COGNITO_USER_POOL_ID=${{ vars.REACT_APP_COGNITO_USER_POOL_ID_PROD }}
          export REACT_APP_COGNITO_CLIENT_ID=${{ vars.REACT_APP_COGNITO_CLIENT_ID_PROD }}
          export REACT_APP_COGNITO_REGION=${{ vars.REACT_APP_COGNITO_REGION }}
          export REACT_APP_COGNITO_DOMAIN=${{ vars.REACT_APP_COGNITO_DOMAIN_PROD }}
          export REACT_APP_COGNITO_REDIRECT_SIGNIN=${{ vars.REACT_APP_COGNITO_REDIRECT_SIGNIN_PROD }}
          export REACT_APP_COGNITO_REDIRECT_SIGNOUT=${{ vars.REACT_APP_COGNITO_REDIRECT_SIGNOUT_PROD }}
          export REACT_APP_API_KEY=${{ vars.REACT_APP_API_KEY_PROD }}
          EOF
          chmod +x prod.sh

      - name: Deploy UI Stack
        working-directory: frontend/cloudformation/
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh
        env:
          ENV: prod
