AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  Configurations and resources for Portfolio Backend

Globals:
  Function:
    Runtime: python3.12
    MemorySize: 256
    Timeout: 45
    CodeUri:
      Bucket: !Ref CodeBucket
      Key: !Ref CodePath

Resources:

  PostsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Posts
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: postId
          AttributeType: S
        - AttributeName: authorId
          AttributeType: S
        - AttributeName: publishedAt
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: postId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: AuthorIdIndex
          KeySchema:
            - AttributeName: authorId
              KeyType: HASH
            - AttributeName: publishedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: StatusPublishedAtIndex
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: publishedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  AuthorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Authors
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: authorId
          AttributeType: S
      KeySchema:
        - AttributeName: authorId
          KeyType: HASH

  CommentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Comments
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: postId
          AttributeType: S
        - AttributeName: commentId
          AttributeType: S
        - AttributeName: parentCommentId
          AttributeType: S
      KeySchema:
        - AttributeName: postId
          KeyType: HASH
        - AttributeName: commentId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: ParentCommentIndex
          KeySchema:
            - AttributeName: postId
              KeyType: HASH
            - AttributeName: parentCommentId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  ReactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Reactions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: commentId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: commentId
          KeyType: HASH
        - AttributeName: userId
          KeyType: RANGE

  PortfolioAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub PortfolioAPI-${Env}
      StageName: !Ref Env
      Cors: "'*'"

  GetBlogsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub get-blogs-${Env}
      Handler: blogs.get.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Events:
        AddItem:
          Type: Api
          Properties:
            RestApiId: !Ref PortfolioAPI
            Path: /get-blogs
            Method: GET
      Environment:
        Variables:
          POSTS_TABLE: !Ref BlogsTable

  CreateBlogsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub create-blogs-${Env}
      Handler: blogs.create.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonDynamoDBFullAccess
      Events:
        AddItem:
          Type: Api
          Properties:
            RestApiId: !Ref PortfolioAPI
            Path: /create-blog
            Method: GET
      Environment:
        Variables:
          POSTS_TABLE: !Ref BlogsTable

Parameters:
  Env:
    Default: dev
    Description: The name of this environment. Will be used to name resources
    Type: String
  CodeBucket:
    Description: The S3 Bucket of lambda code uploaded to
    Type: String
  CodePath:
    Description: The S3 path to the lambda zip file
    Type: String
  PythonRuntime:
    Description: The Python version to use for lambda functions
    Type: String
    Default: python3.12

Outputs:
  ApiBaseUrl:
    Description: "Base URL for the API Gateway"
    Value: !Sub "https://${PortfolioAPI}.execute-api.${AWS::Region}.amazonaws.com/${Env}"