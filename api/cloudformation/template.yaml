AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Blogs API

Globals:
  Function:
    Runtime: !Ref PythonRuntime
    Timeout: 30
    MemorySize: 256
    CodeUri:
      Bucket: !Ref CodeBucket
      Key: !Ref CodeKey

Resources:
  GetBlogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub get-blogs-${env}
      Handler: app.lambda_handler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /blogs
            Method: get

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

Outputs:
  ApiBaseUrl:
    Description: "Base URL for the API Gateway"
    Value: !Sub "https://${WorkshopAPI}.execute-api.${AWS::Region}.amazonaws.com/${Env}"

Parameters:
  PythonRuntime:
    Type: String
    Description: Python runtime version
    Default: "python3.12"
  Env:
    Type: String
    Description: Environment name
    Default: "dev"
  CodeBucket:
    Type: String
    Description: S3 bucket where code is stored
  CodeKey:
    Type: String
    Description: S3 bucket path to code zip file